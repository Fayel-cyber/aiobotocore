name: CI

on:
  push:
    branches:
      - 'master'
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches:
      - 'master'
      - '[0-9].[0-9]+.[0-9]+'

jobs:

  test:
    name: Test
    strategy:
      matrix:
        pyver: [3.8]
        os: [ubuntu]
      fail-fast: true
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Run unittests
      env:
        COLOR: 'yes'
      run: |
        pip install -U setuptools pip
        pip install -U pipenv codecov
        pipenv lock
        pipenv sync --dev
        pipenv check || true
        pipenv graph
        make flake mototest
        
  test-aarch64:
    name: build_arm64
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false 
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build and Test for arm64
      run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
           arm64v8/ubuntu:latest \
           bash -exc 'apt-get update && apt-get -y install git && \
           ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
           apt install -y software-properties-common && \
           add-apt-repository ppa:deadsnakes/ppa && \
           apt install -y python3.8 && \
           apt install -y python3.8-venv && \
           python3.8 -m venv venv38 && \
           source venv38/bin/activate && \
           python -m pip install --upgrade pip && \
           pip install -U setuptools pip && \
           pip install -U pipenv codecov && \
           pipenv lock && \
           pipenv sync --dev && \
           pipenv check || true && \
           pipenv graph && \
           make flake mototest'         
